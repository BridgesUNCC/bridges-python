from tests.StudentInfo import *
from bridges.bridges import *
from bridges.sl_element import *

def main:
    # create the Bridges object, set credentials
    bridges = Bridges(0, "test", "833518929883")
    bridges.set_visualize_JSON(True)
    bridges.connector.set_server("local")
    bridges.set_title("hello test")

    # create the linked list elements with student data
    e01 = SLelement(e=Student("00000000000",
                          "Gretel Chaney",
                          "CS",
                          "g.chaney@generated.com",
                          "magenta",
                          "blue",
                          9.0), label="")

    e02 = SLelement(e=Student("00000000001",
                          "Karol Soderman",
                          "SIS",
                          "k.soderman@generated.com",
                          "magenta",
                          "red",
                          11.0), label="")

    e03 = SLelement(e=Student("00000000002",
                          "Lamont Kyler",
                          "BIO",
                          "l.kyler@generated.com",
                          "yellow",
                          "green",
                          50.0), label="")

    e04 = SLelement(e=Student("00000000003",
                          "Gladys Serino",
                          "CS",
                          "g.serino@generated.com",
                          "green",
                          "magenta",
                          9.0), label="")

    e05 = SLelement(e=Student("00000000004",
                          "Starr Mcginn",
                          "CS",
                          "s.mcginn@generated.com",
                          "red",
                          "cyan",
                          15.0), label="")

    # link the elements
    e01.next = e02
    e02.next = e03
    e03.next = e04
    e04.next = e05

    # iterate through the list and add visual attributes
    # to the elements; set the element color to the favorite
    # color and the link to the disliked color
    currentElement = e01
    while currentElement is not None:
        # color the node
        si = currentElement.value
        currentElement.visualizer.color = si.getLikeColor()

        if currentElement.next is not None:
            # color the link
            currentElement.get_link_visualizer(currentElement.next).color = si.getDislikeColor()
            # adjust link thickness
            currentElement.get_link_visualizer(currentElement.next).thickness = si.getCreditHours() * 0.75

        # set the label to the student info (label created in
        # StudentInfo class
        currentElement.label = si.getName()

        currentElement = currentElement.next

    # set the data structure to be visualized
    bridges.set_data_structure(e01)
    # visualize the data structure
    bridges.visualize()

if __name__ == "__main__":
    main()
